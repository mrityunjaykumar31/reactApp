{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\foodCart\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const itemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[itemIndex];\n    let updatedItems = [];\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[itemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    let updateTotalAmount;\n    updatedItems.forEach(o => {\n      updateTotalAmount = updateTotalAmount + o.price * o.amount;\n    }); // let updateTotalAmount = state.totalAmount + action.item.price * action.item.amount\n\n    return {\n      items: updatedItems,\n      totalAmount: updateTotalAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    const updatedItem = state.items.concat(action.item);\n    const updateTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItem,\n      totalAmount: updateTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemToCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.updateTotalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["D:/Project/React/foodCart/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","itemIndex","findIndex","item","id","existingCartItem","updatedItems","updatedItem","amount","concat","updateTotalAmount","forEach","o","price","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemToCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import { useReducer } from 'react'\r\nimport CartContext from './cart-context'\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n\r\n}\r\nconst cartReducer = (state, action) => {\r\n\r\n    if (action.type === 'ADD') {\r\n\r\n        const itemIndex = state.items.findIndex( item => item.id === action.item.id );\r\n        const existingCartItem = state.items[itemIndex];\r\n        let updatedItems = [];\r\n\r\n        if(existingCartItem) {\r\n           const  updatedItem = { ...existingCartItem, amount: existingCartItem.amount + action.item.amount };\r\n            updatedItems = [...state.items];\r\n            updatedItems[itemIndex] = updatedItem;\r\n\r\n        } else {\r\n            updatedItems = state.items.concat( action.item)\r\n        }\r\n\r\n        let updateTotalAmount;\r\n        updatedItems.forEach( o => {\r\n            updateTotalAmount = updateTotalAmount + o.price * o.amount\r\n        })\r\n      // let updateTotalAmount = state.totalAmount + action.item.price * action.item.amount\r\n\r\n        return { items: updatedItems, totalAmount: updateTotalAmount }\r\n    }\r\n\r\n    if (action.type === 'REMOVE') {\r\n        const updatedItem = state.items.concat(action.item);\r\n        const updateTotalAmount = state.totalAmount + action.item.price * action.item.amount\r\n        return { items: updatedItem, totalAmount: updateTotalAmount }\r\n    }\r\n\r\n    return defaultCartState;\r\n}\r\n\r\nconst CartProvider = (props) => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n    const addItemToCartHandler = (item) => {\r\n        dispatchCartAction({ type: 'ADD', item: item })\r\n    };\r\n    const removeItemToCartHandler = (id) => {\r\n        dispatchCartAction({ type: 'REMOVE', id: id })\r\n    };\r\n\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.updateTotalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemToCartHandler\r\n    }\r\n\r\n    return (\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default CartProvider\r\n"]},"metadata":{},"sourceType":"module"}